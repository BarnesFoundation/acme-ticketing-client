export interface SearchOrdersPayload {
	list: Order[],
	pagination: {
		page: number,
		pageSize: number,
		sortDirection: 'asc' | 'desc',
		sortField: string,
		count: number
	}
}

export interface Order {
	id: string,
	tenantId: number,
	visitorId: string,
	email: string,
	billingEmail: string,
	contactFirstName: string,
	contactLastName: string,
	billingFirstName: string,
	billingLastName: string,
	billingAddress1: string,
	billingCountry: string,
	billingState: string,
	address1: string,
	country: string,
	state: string,
	phoneNumber: string,
	billingPhoneNumber: string,
	orderNumber: string,
	discountedTotalAmount: string,
	totalAmount: string,
	discountedOriginalTotalAmount: string,
	originalTotalAmount: string,
	paidAmount: string,
	balanceAmount: string,
	refundAmount: string,
	saleChannel: string,
	checkInStatus: string,
	creationDate: string,
	paymentDueDate: string,
	orderItems?: OrderItem[], // Appears to only be provided on retrieval of specific order, rather than the result list
	createdOn: string,
	createdBy: string,
	updatedOn: string,
	updatedBy: string,
	legacy: boolean,
	hideEventDate: boolean,
	invoiceAfter: boolean,
	customerId: number,
	obfuscated: boolean,

	membershipId?: number,
	ccLastFourDigits?: string,
	notes?: string,
	ticketDelivery?: string

}

interface OrderItem {
	parentItemId: string,
	comboTemplateType: string,
	eventId: string,
	ticketingTypeId: string,
	eventName: string,
	eventStartTime: number,
	ticketingTypeName: string,
	basicOriginalQuantity: number,
	originalQuantity: number,
	basicQuantity: number,
	quantity: number,
	unitPrice: string,
	discountedUnitPrice: string,
	discountedOriginalAmount: string,
	originalAmount: string,
	discountedAmount: string,
	amount: string,
	balanceAmount: string,
	checkInDate: string,
	checkInQuantity: number,
	itemType: string,
	conversionStatus: string,
	itemId: string,
	displayName: string
}